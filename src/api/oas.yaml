openapi: 3.0.0
info:
  title: API Documentation
  version: 1.0.0
  description: API documentation for comments, publications, and reactions.
servers:
  - url: /api
paths:
  /v1/testPublication:
    get:
      summary: Get every publication in the database for testing purposes
      tags:
        - Publications
      responses:
        '200':
          description: List of test comments
  /v1/publication/user/{user}:
    get:
      summary: Get all publications by a specific user
      tags:
        - Publications
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        '200':
          description: List of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Publication'
  /v1/publications/{id}:
    get:
      summary: Get a publication by ID
      tags:
        - Publications
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the publication
          schema:
            type: string
      responses:
        '200':
          description: Publication data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Publication'
    put:
      summary: Update a publication by ID
      tags:
        - Publications
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the publication
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
      responses:
        '200':
          description: Updated publication
    delete:
      summary: Delete a publication by ID
      tags:
        - Publications
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the publication
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted
  /v1/publications:
    post:
      summary: Create a new publication
      tags:
        - Publications
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Publication'
      responses:
        '201':
          description: Created publication
  /v1/testcomments:
    get:
      summary: Get every comment in the database for testing purposes
      tags:
        - Comments
      responses:
        '200':
          description: List of test comments
  /v1/comments/{id}:
    get:
      summary: Get a comment by ID
      tags:
        - Comments
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the comment
          schema:
            type: string
      responses:
        '200':
          description: Comment data
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Comment'
    put:
      summary: Update a comment by ID
      tags:
        - Comments
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the comment
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '200':
          description: Updated comment
    delete:
      summary: Delete a comment by ID
      tags:
        - Comments
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the comment
          schema:
            type: string
      responses:
        '204':
          description: Successfully deleted
  /v1/comments/user/{user}:
    get:
      summary: Get all comments by a specific user
      tags:
        - Comments
      parameters:
        - name: user
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        '200':
          description: List of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
  /v1/comments/publication/{publication}:
    get:
      summary: Get all comments by a specific publication
      tags:
        - Comments
      parameters:
        - name: publication
          in: path
          required: true
          description: ID of the publication
          schema:
            type: string
      responses:
        '200':
          description: List of comments
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
  /v1/comments:
    post:
      summary: Create a new comment
      tags:
        - Comments
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Comment'
      responses:
        '201':
          description: Created comment
  /v1/testReaction:
    get:
      summary: Get every reaction in the database for testing purposes
      tags:
        - Reactions
      responses:
        '200':
          description: List of test reactions
  /v1/comments/{id}/reactions:
    get:
      summary: Get all reactions for a specific comment
      tags:
        - Reactions
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the comment
          schema:
            type: string
      responses:
        '200':
          description: List of reactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reaction'
  /v1/publications/{id}/reactions:
    get:
      summary: Get all reactions for a specific publication
      tags:
        - Reactions
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the publication
          schema:
            type: string
      responses:
        '200':
          description: List of reactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reaction'
  /v1/user/{id}/unseen:
    get:
      summary: Get unseen reactions for a user
      tags:
        - Reactions
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the user
          schema:
            type: string
      responses:
        '200':
          description: List of unseen reactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Reaction'
  /v1/comments/{id}/reaction:
    post:
      summary: Add a reaction to a comment
      tags:
        - Reactions
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the comment
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reaction'
      responses:
        '201':
          description: Reaction added
  /v1/publications/{id}/reaction:
    post:
      summary: Add a reaction to a publication
      tags:
        - Reactions
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the publication
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Reaction'
      responses:
        '201':
          description: Reaction added
  /v1/read/reaction/{id}:
    put:
      summary: Mark a reaction as read
      tags:
        - Reactions
      parameters:
        - name: id
          in: path
          required: true
          description: ID of the reaction
          schema:
            type: string
      responses:
        '200':
          description: Reaction marked as read
components:
  schemas:
    Comment:
      type: object
      properties:
        publicacion_id:
          type: string
          description: ID of the related publication
        usuario_id:
          type: string
          description: ID of the user who made the comment
        contenido_comentario:
          type: string
          description: Text of the comment
        creado:
          type: string
          format: date-time
          description: Creation timestamp
        modificado:
          type: string
          format: date-time
          description: Last modification timestamp
    Publication:
      type: object
      properties:
        usuario:
          type: string
          description: ID of the user who created the publication
        titulo:
          type: string
          description: Title of the publication
        contenido:
          type: string
          description: Content of the publication
        ubicacion:
          type: string
          enum:
            - AFRICA
            - AMERICA
            - ASIA
            - EUROPE
            - OCEANIA
          description: Geographic location of the publication
        categoria:
          type: string
          enum:
            - ADVENTURE
            - CITY
            - CULTURE
            - NATURE
            - RELAX
          description: Category of the publication
        imagenes:
          type: array
          items:
            type: string
            description: URL of the image
        creado:
          type: string
          format: date-time
          description: Creation timestamp
        modificado:
          type: string
          format: date-time
          description: Last modification timestamp
    Reaction:
      type: object
      properties:
        usuario:
          type: string
          description: ID of the user who reacted
        publicacion:
          type: string
          description: ID of the related publication (if applicable)
        comentario:
          type: string
          description: ID of the related comment (if applicable)
        reaccion:
          type: string
          enum:
            - LIKE
            - LOVE
            - DISLIKE
          description: Type of reaction
        visto:
          type: boolean
          description: Whether the reaction has been marked as seen
        creado:
          type: string
          format: date-time
          description: Creation timestamp
        modificado:
          type: string
          format: date-time
          description: Last modification timestamp
